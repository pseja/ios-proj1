#!/bin/sh

export POSIXLY_CORRECT=yes
export LC_NUMERIC=en_US.UTF-8

print_help() {
    echo "Usage: xtf [-h|--help] [FILTER] [COMMAND] USER LOG [LOG2 [...]"
    echo "-h|--help - shows help"
    echo "FILTERS: "
    echo "    -a DATETIME"
    echo "    -b DATETIME"
    echo "    -c CURRENCY"
    echo "COMMANDS: "
    echo "    list"
    echo "    list-currency"
    echo "    status"
    echo "    profit"
}

# getopts nepouzivat protoze kdyz neuvidi prvni validni argument tak se ukonci
#        ale vstupy muzou byt v libovolnym poradi

#READ_INPUT_LOGS="gzip -d -c $GZIP | cat $LOGS - | sort"

#READ_FILTERED="eval $READ_INPUT_LOGS | awk -F ';' '(\$1 > $AFTER_TIME &&) {print \$0}' | grep "

FILTER=""
COMMAND=""
USER=""
LOGS=""
ZIPPED_LOGS=""

while [ "$#" -gt 0 ]; do
    case "$1" in
    -h | --help)
        print_help
        exit 0
        ;;

    -a | -b | -c)
        FILTER="$1 $2 $FILTER"
        shift 2
        ;;

    list | list-currency | status | profit)
        COMMAND="$1"
        shift
        ;;

    *.log | *.log.gz)
        while [ "$#" -gt 0 ]; do
            case "$1" in
            *.gz)
                ZIPPED_LOGS="$1 $ZIPPED_LOGS"
                ;;
            *)
                LOGS="$1 $LOGS"
                ;;
            esac
            shift
        done
        ;;

    *)
        USER="$1"
        shift
        ;;
    esac
done

echo "filter = $FILTER"
echo "command = $COMMAND"
echo "user = $USER"
echo "logs = $LOGS"
echo "zips = $ZIPPED_LOGS"
echo "-------------------"

for log in $LOGS; do
    if [ -f "$log" ]; then
        LOG_INPUT="${LOG_INPUT}$(cat "$log")"
    fi
done

for gz_log in $ZIPPED_LOGS; do
    if [ -f "$gz_log" ]; then
        LOG_INPUT="${LOG_INPUT}\n$(gzip -d -c "$gz_log")"
    fi
done

AFTER_TIME=$(echo "$FILTER" | awk -F ' ' '{
    for (i=1; i<=NF; i++)
        if ($i == "-a")
        {
            printf $(i+1) " " $(i+2)
        }
    }')

BEFORE_TIME=$(echo "$FILTER" | awk -F ' ' '{
    for (i=1; i<=NF; i++)
        if ($i == "-b")
        {
            printf $(i+1) " " $(i+2)
        }
    }')

CURRENCY=$(echo "$FILTER" | awk -F ' ' '{
    for (i=1; i<=NF; i++)
        if ($i == "-c")
        {
            currencies = (currencies == "") ? $(i+1) : currencies " " $(i+1)
        }
    }
    END {
        print currencies
    }')

echo "AFTER_TIME: $AFTER_TIME;"
echo "BEFORE_TIME: $BEFORE_TIME;"
echo "CURRENCY: $CURRENCY;"

LIST=$(echo "$LOG_INPUT" | awk -F ";" "{if (\$1 == \"$USER\") {printf \"%s\n\", \$0}}")

if [ -n "$AFTER_TIME" ]; then
    echo "after time neni prazdny"
    LIST=$(echo "$LIST" | awk -F ";" -v after_time="$AFTER_TIME" '{if ($2 > after_time) {printf "%s\n", $0}}')
fi

if [ -n "$BEFORE_TIME" ]; then
    echo "before time neni prazdny"
    LIST=$(echo "$LIST" | awk -F ";" -v before_time="$BEFORE_TIME" '{if ($1 == user && $2 < before_time) {printf "%s\n", $0}}')
fi

if [ -n "$CURRENCY" ]; then
    echo "currency neni prazdny"
    LIST=$(echo "$LIST" | awk -F ";" -v currency="$CURRENCY" 'BEGIN {split(currency, currencies, " ")} {for (i in currencies) {if ($3 == currencies[i]) {printf "%s\n", $0; break}}}')
fi
